/*
Go Web App

Go Web App 

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ICreateUserDTO struct for ICreateUserDTO
type ICreateUserDTO struct {
	// Username. 
	Username string `json:"username"`
	// User email address. 
	Email string `json:"email"`
}

// NewICreateUserDTO instantiates a new ICreateUserDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewICreateUserDTO(username string, email string) *ICreateUserDTO {
	this := ICreateUserDTO{}
	this.Username = username
	this.Email = email
	return &this
}

// NewICreateUserDTOWithDefaults instantiates a new ICreateUserDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewICreateUserDTOWithDefaults() *ICreateUserDTO {
	this := ICreateUserDTO{}
	return &this
}

// GetUsername returns the Username field value
func (o *ICreateUserDTO) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *ICreateUserDTO) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *ICreateUserDTO) SetUsername(v string) {
	o.Username = v
}

// GetEmail returns the Email field value
func (o *ICreateUserDTO) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ICreateUserDTO) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ICreateUserDTO) SetEmail(v string) {
	o.Email = v
}

func (o ICreateUserDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableICreateUserDTO struct {
	value *ICreateUserDTO
	isSet bool
}

func (v NullableICreateUserDTO) Get() *ICreateUserDTO {
	return v.value
}

func (v *NullableICreateUserDTO) Set(val *ICreateUserDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableICreateUserDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableICreateUserDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableICreateUserDTO(val *ICreateUserDTO) *NullableICreateUserDTO {
	return &NullableICreateUserDTO{value: val, isSet: true}
}

func (v NullableICreateUserDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableICreateUserDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


